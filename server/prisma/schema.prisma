generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model UserRole {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]

  @@map("user_roles")
}

model User {
  id         Int      @id @default(autoincrement())
  nickname   String   @unique @db.VarChar(50)
  email      String   @unique @db.VarChar(150)
  hashedCode String   @db.VarChar
  roleId     Int
  role       UserRole @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "role_id_fk")

  takes         Take[]
  favoriteTakes FavoriteTake[]

  @@map("users")
}

model Take {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy Int

  user        User           @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  favoritedBy FavoriteTake[]

  @@map("takes")
}

model FavoriteTake {
  id     Int @id @default(autoincrement())
  userId Int
  takeId Int

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  take Take @relation(fields: [takeId], references: [id], onDelete: Cascade)

  @@unique([userId, takeId]) //Prevent duplicate pair
  @@index([userId])
  @@index([takeId])
  @@map("favorite_takes")
}
